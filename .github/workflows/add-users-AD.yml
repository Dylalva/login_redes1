name: Crear usuarios en Active Directory
on: workflow_dispatch

jobs:
  agregar-usuarios:
    runs-on: ubuntu-latest
    environment: secrets
    permissions:
      contents: write

    # ðŸ‘‡ Esto evita ejecuciÃ³n en paralelo
    strategy:
      max-parallel: 1
      matrix:
        user:
          - '{ "name": "usuario final", "username": "usuariofinal", "email": "usuario@redes1.dev", "password": "holaholaholahola12+", "admin": true }'
          - '{ "name": "Dylan Elizondo", "username": "dylan", "email": "dylan@redes1.dev", "password": "ElTigre123+", "admin": false }'
          - '{ "name": "Kate Guillen", "username": "kate", "email": "kate@redes1.dev", "password": "ElTigre123+", "admin": false }'
          - '{ "name": "Luis David", "username": "luis", "email": "luis@redes1.dev", "password": "ElTigre123+", "admin": false }'
          - '{ "name": "Andrea Orozco", "username": "andrea", "email": "andrea@redes1.dev", "password": "ElTigre123+", "admin": false }'

    env:
      RG: ACTIVE_DIR
      VM: RedesAD
      DOMAIN: redes1.dev

    steps:
    - name: Azure login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Crear usuario desde JSON
      uses: azure/cli@v2
      with:
        inlineScript: |
          echo "ðŸ‘¤ Procesando usuario..."
          USER_JSON='${{ matrix.user }}'

          az vm run-command invoke \
            --resource-group "$RG" \
            --name "$VM" \
            --command-id RunPowerShellScript \
            --scripts "
              \$userData = ConvertFrom-Json '$USER_JSON'
              \$securePass = ConvertTo-SecureString \$userData.password -AsPlainText -Force

              # Crear usuario
              New-ADUser -Name \$userData.name `
                         -SamAccountName \$userData.username `
                         -UserPrincipalName \$userData.email `
                         -AccountPassword \$securePass `
                         -Enabled \$true `
                         -PasswordNeverExpires \$true `
                         -ChangePasswordAtLogon \$false

              # Agregar a grupo de admins si corresponde
              if (\$userData.admin -eq \$true) {
                Add-ADGroupMember -Identity 'Domain Admins' -Members \$userData.username
              }

              Write-Output \"âœ… Usuario \$userData.username creado correctamente\"
            "
